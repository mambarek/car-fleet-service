components:
  schemas:
    Car:
      required:
        - publicId
        - name
      type: object
      properties:
        publicId:
          type: string
          format: uuid
          description: a UUID acts as public id to identify a Car. Use this id for fetching and updating
        name:
          type: string
          minLength: 2
          maxLength: 100
          description: The Car name
          example: BMW
        description:
          type: string
          maxLength: 500
          description: A description field for more information about the Car
          example: A nice powerful car have alot of options
        reservedFrom:
          type: string
          format: date-time
          description: The reservation Date and Time in ISO 8601 format
        reservedTo:
          type: string
          format: date-time
          description: The reservation end Date and Time in ISO 8601 format
        mileage:
          type: integer
          format: int32
          minimum: 0
          maximum: 1000000
          description: The miliage of Car
        status:
          type: string
          enum:
            - RESERVED
            - UNDER_REPAIR
            - STOPPED

    SearchResult:
      type: object
      properties:
        total:
          type: integer
          format: int32
          description: The total count of items that fullfill the search query
        page:
          type: integer
          format: int32
          description: The current selected page in UI
        records:
          type: integer
          format: int64
          description: Count of returned items that fulfill the pagonation criteria
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Car'
          description: Car items returned
        userdata:
          type: object
          description: Not in use may be removed
