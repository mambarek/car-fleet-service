openapi: 3.0.1
info:
  title: CarFleetService
  description: Car Fleet Service API
  version: 1.0.0
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache license 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://thinkpad01:8030/api/v1
tags:
  - name: car
    description: Operations about Car
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io

paths:
  /cars:
    get:
      tags:
        - car
      operationId: getCars
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Car"
  /cars/search:
    post:
      tags:
        - search
      summary: Search cars for a given filter
      description: Return a SearchResult containing found cars
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: './shared-objects-schema.yaml#/components/schemas/SearchTemplate'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SearchResult'

components:
  schemas:
    Car:
      required:
        - publicId
      type: object
      properties:
        publicId:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        reservedFrom:
          type: string
          format: date-time
        reservedTo:
          type: string
          format: date-time
        mileage:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - RESERVED
            - UNDER_REPAIR
            - STOPPED

    SearchResult:
      type: object
      properties:
        total:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        records:
          type: integer
          format: int64
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Car'
        userdata:
          type: object
